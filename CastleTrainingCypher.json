[
    {
        "instruction": "Retrieve all nodes with the label 'person'",
        "input": "CREATE (:Node {name: 'Castle', type: 'structure'}), (:Node {name: 'Lord', type: 'person'}), (:Node {name: 'Blacksmith', type: 'profession'}), (:Node {name: 'Stone Mason', type: 'profession'}), (:Node {name: 'Guard', type: 'person'}), (:Node {name: 'Architect', type: 'profession'}), (:Node {name: 'King', type: 'person'}), (:Node {name: 'Queen', type: 'person'}); MATCH (lord:Node {name: 'Lord'}), (castle:Node {name: 'Castle'}) CREATE (lord)-[:OWNS]->(castle); MATCH (blacksmith:Node {name: 'Blacksmith'}), (castle:Node {name: 'Castle'}) CREATE (blacksmith)-[:CONTRIBUTES_TO]->(castle); MATCH (stoneMason:Node {name: 'Stone Mason'}), (castle:Node {name: 'Castle'}) CREATE (stoneMason)-[:CONTRIBUTES_TO]->(castle); MATCH (guard:Node {name: 'Guard'}), (castle:Node {name: 'Castle'}) CREATE (guard)-[:PROTECTS]->(castle); MATCH (architect:Node {name: 'Architect'}), (castle:Node {name: 'Castle'}) CREATE (architect)-[:DESIGNS]->(castle); MATCH (king:Node {name: 'King'}), (castle:Node {name: 'Castle'}) CREATE (king)-[:RULES]->(castle); MATCH (queen:Node {name: 'Queen'}), (castle:Node {name: 'Castle'}) CREATE (queen)-[:RULES]->(castle); MATCH (king:Node {name: 'King'}), (queen:Node {name: 'Queen'}) CREATE (king)-[:MARRIED_TO]->(queen); MATCH (lord:Node {name: 'Lord'}), (queen:Node {name: 'Queen'}) CREATE (lord)-[:SERVES]->(queen); MATCH (lord:Node {name: 'Lord'}), (king:Node {name: 'King'}) CREATE (lord)-[:ALLIED_WITH]->(king); MATCH (queen:Node {name: 'Queen'}), (king:Node {name: 'King'}) CREATE (queen)-[:MARRIED_TO]->(king); MATCH (king:Node {name: 'King'}), (architect:Node {name: 'Architect'}) CREATE (king)-[:EMPLOYS]->(architect); MATCH (queen:Node {name: 'Queen'}), (guard:Node {name: 'Guard'}) CREATE (queen)-[:REQUIRES_PROTECTION]->(guard);",
        "output": "MATCH (p:Node) WHERE p.type = 'person' RETURN p;;"
    },
    {
        "instruction": "Find the relationship between the 'Blacksmith' and 'Castle' nodes:",
        "input": "CREATE (:Node {name: 'Castle', type: 'structure'}), (:Node {name: 'Lord', type: 'person'}), (:Node {name: 'Blacksmith', type: 'profession'}), (:Node {name: 'Stone Mason', type: 'profession'}), (:Node {name: 'Guard', type: 'person'}), (:Node {name: 'Architect', type: 'profession'}), (:Node {name: 'King', type: 'person'}), (:Node {name: 'Queen', type: 'person'}); MATCH (lord:Node {name: 'Lord'}), (castle:Node {name: 'Castle'}) CREATE (lord)-[:OWNS]->(castle); MATCH (blacksmith:Node {name: 'Blacksmith'}), (castle:Node {name: 'Castle'}) CREATE (blacksmith)-[:CONTRIBUTES_TO]->(castle); MATCH (stoneMason:Node {name: 'Stone Mason'}), (castle:Node {name: 'Castle'}) CREATE (stoneMason)-[:CONTRIBUTES_TO]->(castle); MATCH (guard:Node {name: 'Guard'}), (castle:Node {name: 'Castle'}) CREATE (guard)-[:PROTECTS]->(castle); MATCH (architect:Node {name: 'Architect'}), (castle:Node {name: 'Castle'}) CREATE (architect)-[:DESIGNS]->(castle); MATCH (king:Node {name: 'King'}), (castle:Node {name: 'Castle'}) CREATE (king)-[:RULES]->(castle); MATCH (queen:Node {name: 'Queen'}), (castle:Node {name: 'Castle'}) CREATE (queen)-[:RULES]->(castle); MATCH (king:Node {name: 'King'}), (queen:Node {name: 'Queen'}) CREATE (king)-[:MARRIED_TO]->(queen); MATCH (lord:Node {name: 'Lord'}), (queen:Node {name: 'Queen'}) CREATE (lord)-[:SERVES]->(queen); MATCH (lord:Node {name: 'Lord'}), (king:Node {name: 'King'}) CREATE (lord)-[:ALLIED_WITH]->(king); MATCH (queen:Node {name: 'Queen'}), (king:Node {name: 'King'}) CREATE (queen)-[:MARRIED_TO]->(king); MATCH (king:Node {name: 'King'}), (architect:Node {name: 'Architect'}) CREATE (king)-[:EMPLOYS]->(architect); MATCH (queen:Node {name: 'Queen'}), (guard:Node {name: 'Guard'}) CREATE (queen)-[:REQUIRES_PROTECTION]->(guard);",
        "output": "MATCH (blacksmith:Node {name: 'Blacksmith'})-[:CONTRIBUTES_TO]->(castle:Node {name: 'Castle'}) RETURN blacksmith, castle;"
    },
    {
        "instruction": "Return the attributes of the 'Queen' node:",
        "input": "CREATE (:Node {name: 'Castle', type: 'structure'}), (:Node {name: 'Lord', type: 'person'}), (:Node {name: 'Blacksmith', type: 'profession'}), (:Node {name: 'Stone Mason', type: 'profession'}), (:Node {name: 'Guard', type: 'person'}), (:Node {name: 'Architect', type: 'profession'}), (:Node {name: 'King', type: 'person'}), (:Node {name: 'Queen', type: 'person'}); MATCH (lord:Node {name: 'Lord'}), (castle:Node {name: 'Castle'}) CREATE (lord)-[:OWNS]->(castle); MATCH (blacksmith:Node {name: 'Blacksmith'}), (castle:Node {name: 'Castle'}) CREATE (blacksmith)-[:CONTRIBUTES_TO]->(castle); MATCH (stoneMason:Node {name: 'Stone Mason'}), (castle:Node {name: 'Castle'}) CREATE (stoneMason)-[:CONTRIBUTES_TO]->(castle); MATCH (guard:Node {name: 'Guard'}), (castle:Node {name: 'Castle'}) CREATE (guard)-[:PROTECTS]->(castle); MATCH (architect:Node {name: 'Architect'}), (castle:Node {name: 'Castle'}) CREATE (architect)-[:DESIGNS]->(castle); MATCH (king:Node {name: 'King'}), (castle:Node {name: 'Castle'}) CREATE (king)-[:RULES]->(castle); MATCH (queen:Node {name: 'Queen'}), (castle:Node {name: 'Castle'}) CREATE (queen)-[:RULES]->(castle); MATCH (king:Node {name: 'King'}), (queen:Node {name: 'Queen'}) CREATE (king)-[:MARRIED_TO]->(queen); MATCH (lord:Node {name: 'Lord'}), (queen:Node {name: 'Queen'}) CREATE (lord)-[:SERVES]->(queen); MATCH (lord:Node {name: 'Lord'}), (king:Node {name: 'King'}) CREATE (lord)-[:ALLIED_WITH]->(king); MATCH (queen:Node {name: 'Queen'}), (king:Node {name: 'King'}) CREATE (queen)-[:MARRIED_TO]->(king); MATCH (king:Node {name: 'King'}), (architect:Node {name: 'Architect'}) CREATE (king)-[:EMPLOYS]->(architect); MATCH (queen:Node {name: 'Queen'}), (guard:Node {name: 'Guard'}) CREATE (queen)-[:REQUIRES_PROTECTION]->(guard);",
        "output": "MATCH (queen:Node {name: 'Queen'}) RETURN queen.attributes;"
    },
	{
		"instruction": "Find all nodes that the 'King' and 'Queen' rule over and the persons who serve them.",
        "input": "CREATE (:Node {name: 'Castle', type: 'structure'}), (:Node {name: 'Lord', type: 'person'}), (:Node {name: 'Blacksmith', type: 'profession'}), (:Node {name: 'Stone Mason', type: 'profession'}), (:Node {name: 'Guard', type: 'person'}), (:Node {name: 'Architect', type: 'profession'}), (:Node {name: 'King', type: 'person'}), (:Node {name: 'Queen', type: 'person'}); MATCH (lord:Node {name: 'Lord'}), (castle:Node {name: 'Castle'}) CREATE (lord)-[:OWNS]->(castle); MATCH (blacksmith:Node {name: 'Blacksmith'}), (castle:Node {name: 'Castle'}) CREATE (blacksmith)-[:CONTRIBUTES_TO]->(castle); MATCH (stoneMason:Node {name: 'Stone Mason'}), (castle:Node {name: 'Castle'}) CREATE (stoneMason)-[:CONTRIBUTES_TO]->(castle); MATCH (guard:Node {name: 'Guard'}), (castle:Node {name: 'Castle'}) CREATE (guard)-[:PROTECTS]->(castle); MATCH (architect:Node {name: 'Architect'}), (castle:Node {name: 'Castle'}) CREATE (architect)-[:DESIGNS]->(castle); MATCH (king:Node {name: 'King'}), (castle:Node {name: 'Castle'}) CREATE (king)-[:RULES]->(castle); MATCH (queen:Node {name: 'Queen'}), (castle:Node {name: 'Castle'}) CREATE (queen)-[:RULES]->(castle); MATCH (king:Node {name: 'King'}), (queen:Node {name: 'Queen'}) CREATE (king)-[:MARRIED_TO]->(queen); MATCH (lord:Node {name: 'Lord'}), (queen:Node {name: 'Queen'}) CREATE (lord)-[:SERVES]->(queen); MATCH (lord:Node {name: 'Lord'}), (king:Node {name: 'King'}) CREATE (lord)-[:ALLIED_WITH]->(king); MATCH (queen:Node {name: 'Queen'}), (king:Node {name: 'King'}) CREATE (queen)-[:MARRIED_TO]->(king); MATCH (king:Node {name: 'King'}), (architect:Node {name: 'Architect'}) CREATE (king)-[:EMPLOYS]->(architect); MATCH (queen:Node {name: 'Queen'}), (guard:Node {name: 'Guard'}) CREATE (queen)-[:REQUIRES_PROTECTION]->(guard);",
        "output": "MATCH (king:Node {name: 'King'})-[:RULES]->(castle:Node) MATCH (lord:Node)-[:SERVES]->(queen:Node {name: 'Queen'}) RETURN king, castle, lord, queen;"
	}
]