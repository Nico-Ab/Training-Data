[
    {
        "instruction": "Find all nodes with the label 'prey':",
        "input": "{'nodes': [{'name': 'Forest', 'type': 'environment'}, {'name': 'Tiger', 'type': 'predator'}, {'name': 'Deer', 'type': 'prey'}, {'name': 'Rabbit', 'type': 'prey'}, {'name': 'Grass', 'type': 'vegetation'}], 'relationships': [{'type': 'INHABITS', 'source': 'Forest', 'target': 'Tiger'}, {'type': 'INHABITS', 'source': 'Forest', 'target': 'Deer'}, {'type': 'INHABITS', 'source': 'Forest', 'target': 'Rabbit'}, {'type': 'GROWS', 'source': 'Forest', 'target': 'Grass'}, {'type': 'PREDATOR_OF', 'source': 'Tiger', 'target': 'Deer'}, {'type': 'PREDATOR_OF', 'source': 'Tiger', 'target': 'Rabbit'}, {'type': 'EATS', 'source': 'Deer', 'target': 'Grass'}, {'type': 'EATS', 'source': 'Rabbit', 'target': 'Grass'}]}",
        "output": "MATCH (n:Node {type: 'prey'}) RETURN n;"
    },
    {
        "instruction": "Return the relationship between the 'Tiger' and 'Deer' nodes:",
        "input": "write a cypher query that returns the predators in this graph: {'nodes': [{'name': 'Forest', 'type': 'environment'}, {'name': 'Tiger', 'type': 'predator'}, {'name': 'Deer', 'type': 'prey'}, {'name': 'Rabbit', 'type': 'prey'}, {'name': 'Grass', 'type': 'vegetation'}], 'relationships': [{'type': 'INHABITS', 'source': 'Forest', 'target': 'Tiger'}, {'type': 'INHABITS', 'source': 'Forest', 'target': 'Deer'}, {'type': 'INHABITS', 'source': 'Forest', 'target': 'Rabbit'}, {'type': 'GROWS', 'source': 'Forest', 'target': 'Grass'}, {'type': 'PREDATOR_OF', 'source': 'Tiger', 'target': 'Deer'}, {'type': 'PREDATOR_OF', 'source': 'Tiger', 'target': 'Rabbit'}, {'type': 'EATS', 'source': 'Deer', 'target': 'Grass'}, {'type': 'EATS', 'source': 'Rabbit', 'target': 'Grass'}]}",
        "output": "MATCH (tiger:Node {name: 'Tiger'})-[r]->(deer:Node {name: 'Deer'}) RETURN r;"
    },
    {
        "instruction": "Return the attributes of the 'Rabbit' node:",
        "input": "write a cypher query that returns the predators in this graph: {'nodes': [{'name': 'Forest', 'type': 'environment'}, {'name': 'Tiger', 'type': 'predator'}, {'name': 'Deer', 'type': 'prey'}, {'name': 'Rabbit', 'type': 'prey'}, {'name': 'Grass', 'type': 'vegetation'}], 'relationships': [{'type': 'INHABITS', 'source': 'Forest', 'target': 'Tiger'}, {'type': 'INHABITS', 'source': 'Forest', 'target': 'Deer'}, {'type': 'INHABITS', 'source': 'Forest', 'target': 'Rabbit'}, {'type': 'GROWS', 'source': 'Forest', 'target': 'Grass'}, {'type': 'PREDATOR_OF', 'source': 'Tiger', 'target': 'Deer'}, {'type': 'PREDATOR_OF', 'source': 'Tiger', 'target': 'Rabbit'}, {'type': 'EATS', 'source': 'Deer', 'target': 'Grass'}, {'type': 'EATS', 'source': 'Rabbit', 'target': 'Grass'}]}",
        "output": "MATCH (rabbit:Node {name: 'Rabbit'}) RETURN rabbit.name, rabbit.type;"
    },
	{
		"instruction": "Find all nodes that the 'Tiger' is a predator of and return their names:",
        "input": "write a cypher query that returns the predators in this graph: {'nodes': [{'name': 'Forest', 'type': 'environment'}, {'name': 'Tiger', 'type': 'predator'}, {'name': 'Deer', 'type': 'prey'}, {'name': 'Rabbit', 'type': 'prey'}, {'name': 'Grass', 'type': 'vegetation'}], 'relationships': [{'type': 'INHABITS', 'source': 'Forest', 'target': 'Tiger'}, {'type': 'INHABITS', 'source': 'Forest', 'target': 'Deer'}, {'type': 'INHABITS', 'source': 'Forest', 'target': 'Rabbit'}, {'type': 'GROWS', 'source': 'Forest', 'target': 'Grass'}, {'type': 'PREDATOR_OF', 'source': 'Tiger', 'target': 'Deer'}, {'type': 'PREDATOR_OF', 'source': 'Tiger', 'target': 'Rabbit'}, {'type': 'EATS', 'source': 'Deer', 'target': 'Grass'}, {'type': 'EATS', 'source': 'Rabbit', 'target': 'Grass'}]}",
        "output": "MATCH (tiger:Node {name: 'Tiger'})-[:PREDATOR_OF]->(prey:Node) RETURN prey.name;"
	}
]